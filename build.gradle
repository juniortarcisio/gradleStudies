/*
	A bunch of tests that I'm doing and I would like to save in case
	I want to take a look later or to make further tests.
*/

task groovy << {}

println "Hello Groovy"

class JavaGreeter {
	public static void sayHello() {
		System.out.println("Hello Java!");
	}
}

JavaGreeter greeter = new JavaGreeter()
greeter.sayHello()

def foo = 6.5

println "foo has value : $foo"

println "Calculation test: ${5 + 6}"

println "type of foo: ${foo.class}"

foo = "a string"

println "foo has value : $foo"

println "type of foo: ${foo.class}"

def powIt(n) {
	n * n
}

foo = 9
println "powIt $foo result: ${powIt(foo)}"

def funcOneArg(x) {
	println "Called the function funcOneArg with arg $x"
	x
}

def funcTwoArgs(x,y) {
	println "Called the function funcTwoArgs with the args $x and $y"
	x + y
}

funcOneArg 1
funcTwoArgs 2, 3

funcTwoArgs funcOneArg(1), 2

task helloWorld {
    doLast{
        println "Hello, World!"        
    }
}

task closureFunctions {
	doLast {
		def xoo = "Whatever you want"
		def myClosureFunction = {
			println "Closure functions also capture variables from it's enclosing environment"
			println "Capturing the value of xoo: $xoo"
		}
		
		myClosureFunction()
		
		println "It also can be passed to variables (like a delegate)"
		def xar = myClosureFunction
		def xuu = xar
		xuu()
				
		def powItClosure = { x ->  x * x }
		
		def applyTwice = { func, arg -> func(func(arg)) }
		
				
		def testApplyTwiceResult = applyTwice(powItClosure, 3)
		println "Executing powIt twice gives you the result $testApplyTwiceResult"
	}
}
